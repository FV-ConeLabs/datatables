
# How to use (W.I.P)

## API request example

````bash
    https://api.mysite.com/users?
        offset=20               # offset (page number 3)
        &limit=10               # rows per page
        &q=john                 # full text search
        &name=doe               # column filter: name = 'doe'
        &sort=name,created_at
        &order=asc,desc         # sort columns: name=asc, created_at=desc
````

## Bind a reload function to datatable events
````ts

    handler.on(['setPage', 'setRowsPerPage'], (state: State) => {
        return myReloadFunc(state)
    })
    // myReloadFunc() must return an iterable dataset


    type Event = 'setPage' | 'setRowsPerPage' | 'search' | 'sort' | 'filter'
````

## State = client-side datatable state
````ts
type State = {
    pageNumber: number,
    rowsPerPage: number,
    offset: number,
    search: string | undefined,
    sorted: Order<Row>[] | Order<Row> | undefined
    filters: Filter<Row>[] | undefined
}
````

## reload data function
````ts
export const myReloadFunc = async ({ offset, rowsPerPage }: State) => {

    const response = await fetch(
        `https://api.mysite.com/users?` +
            `offset=${offset}`          +
            `&limit=${rowsPerPage}`
    )
    return response.json()
}
````

## Trigger event
````ts
handler.run('setPage') // will reload and set data
// or
handler.run('setRowsPerPage')

````

<style>
   h1{
        font-size:32px;
        color:var(--secondary);
        font-weight:normal;
    }
    h2{
        font-size:18px;
        color:var(--primary);
        font-weight:400;
        margin:80px 0 8px 0;
    }
    p{
        margin-right:24px;
    }
    blockquote{
        position:relative;
        overflow: auto;
        white-space: nowrap;
        display:inline-block;
        margin:0;
        /* width: 100%; */
        background:#eee;
        border-radius:8px;
        padding:4px 8px;
    }
    blockquote p{
        padding:0;
        margin:0;
        color:#ad1457;
        font-family:monospace;
    }
    blockquote strong{
        color:#00695c;
        font-family:JetBrains;
    }
    blockquote em{
        color:#ef6c00;
        font-style:normal;
        font-family:Helvetica;
    }
    @media (max-width: 800px) {
        blockquote { width: 100%; }
    }
</style>